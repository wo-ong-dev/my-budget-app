name: Deploy
on:
  push:
    branches: [ "main" ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.KEY }}

      - name: Add host to known_hosts
        run: |
          ssh-keyscan -p 22 13.125.205.126 >> ~/.ssh/known_hosts

      - name: Deploy over SSH
        env:
          APP_DIR: ${{ secrets.APP_DIR }}
          GH_PAT: ${{ secrets.GH_PAT }}
          NGINX_STATIC_DIR: ${{ secrets.NGINX_STATIC_DIR }}
        run: |
          ssh -p 22 ec2-user@13.125.205.126 'bash -s' << REMOTE
          set -e
          # 1) 경로/시크릿 정리
          APP_DIR_RAW="${APP_DIR}"
          APP_DIR=\$(printf "%s" "\$APP_DIR_RAW" | tr -d '\r' | xargs)
          REPO_URL="https://\${GH_PAT}@github.com/wo-ong-dev/my-budget-app.git"

          echo "Using APP_DIR: [\${APP_DIR}]"
          mkdir -p "\${APP_DIR}"

          # 2) 첫 배포면 클론, 있으면 갱신
          if [ ! -d "\${APP_DIR}/.git" ]; then
            rm -rf "\${APP_DIR}"/*
            git clone "\${REPO_URL}" "\${APP_DIR}"
          fi

          cd "\${APP_DIR}"
          git remote set-url origin "\${REPO_URL}"
          git fetch --all
          git reset --hard origin/main

          # 3) 빌드
          npm ci
          npm run build

          # 4) Nginx 정적 배치(있는 경우만)
          NGINX_DIR_RAW="\${NGINX_STATIC_DIR}"
          NGINX_DIR=\$(printf "%s" "\$NGINX_DIR_RAW" | tr -d '\r' | xargs)
          if [ -n "\$NGINX_DIR" ] && [ -d "\$NGINX_DIR" ]; then
            sudo rm -rf "\$NGINX_DIR"/*
            sudo cp -r dist/* "\$NGINX_DIR"/
            sudo systemctl reload nginx || true
          fi
          REMOTE
