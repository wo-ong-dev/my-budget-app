name: Build and Deploy (EC2 Nginx)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          # Set if you want to override at build-time. Optional because code also uses absolute "/api" paths.
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.KEY }}

      - name: Copy build to EC2 (/tmp)
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          PORT: ${{ secrets.PORT }}
        run: |
          SSH_PORT=${PORT:-22}
          echo "üîç Connecting to ${USER}@${HOST}:${SSH_PORT}"

          # Test SSH connection first
          ssh -p $SSH_PORT -o StrictHostKeyChecking=no -o ConnectTimeout=10 ${USER}@${HOST} "echo '‚úÖ SSH connection successful'" || {
            echo "‚ùå SSH connection failed!"
            echo "Trying with ec2-user..."
            ssh -p $SSH_PORT -o StrictHostKeyChecking=no -o ConnectTimeout=10 ec2-user@${HOST} "echo '‚úÖ SSH connection successful with ec2-user'" && export USER=ec2-user || exit 1
          }

          echo "üìÅ Creating remote directory..."
          ssh -p $SSH_PORT -o StrictHostKeyChecking=no ${USER}@${HOST} "mkdir -p /tmp/my-budget-app/"

          echo "üì§ Copying files to EC2..."
          scp -P $SSH_PORT -o StrictHostKeyChecking=no -r dist/* ${USER}@${HOST}:/tmp/my-budget-app/

          echo "‚úÖ Files copied successfully"

      - name: Publish to Nginx docroot
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          PORT: ${{ secrets.PORT }}
          APP_DIR: ${{ secrets.APP_DIR }}
        run: |
          SSH_PORT=${PORT:-22}
          TARGET_DIR=${APP_DIR:-/var/www/html}

          echo "üöÄ Publishing to Nginx..."
          echo "üìÇ Target directory: $TARGET_DIR"

          ssh -p $SSH_PORT -o StrictHostKeyChecking=no ${USER}@${HOST} bash << 'EOF'
            set -e
            TARGET_DIR="${APP_DIR:-/var/www/html}"

            echo "üìÅ Creating target directory..."
            sudo mkdir -p $TARGET_DIR

            echo "üóëÔ∏è  Clearing old files..."
            sudo rm -rf $TARGET_DIR/*

            echo "üìã Copying new files..."
            sudo cp -r /tmp/my-budget-app/* $TARGET_DIR/

            echo "üë§ Setting permissions..."
            sudo chown -R nginx:nginx $TARGET_DIR 2>/dev/null || sudo chown -R www-data:www-data $TARGET_DIR 2>/dev/null || echo "‚ö†Ô∏è  Permission change skipped"

            echo "üîÑ Restarting Nginx..."
            if command -v systemctl >/dev/null 2>&1; then
              sudo systemctl restart nginx && echo "‚úÖ Nginx restarted"
            else
              echo "‚ö†Ô∏è  systemctl not found, skipping restart"
            fi

            echo "üéâ Deployment completed!"
          EOF

 
